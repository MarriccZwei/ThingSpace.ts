name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
   runs-on: ubuntu-latest
   steps:
    - name: CheckOut
      uses: actions/checkout@v3

    # very bad, copies entire project to the vm not just a backend
    - name: Copy files to EC2
      uses: appleboy/scp-action@v1
      with: 
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: "."
        target: "/home/ubuntu/cpen321M3"

    - name: Rebuild and Deploy
      uses: appleboy/ssh-action@v1
      with: 
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          cd /home/ubuntu/cpen321M3/CPEN-321-M1-app/backend

          # write secrets into env
          cat > .env << FOF
          PORT=${{ secrets.PROD_PORT }}
          MONGODB_URI=${{ secrets.PROD_DB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          EOF

          # write into the firebase json file
          cat > firebase-service-account.json << FOF
          ${{secrets.FIREBASE_JSON}}
          EOF

          # Give .env and firebase-service-account.json permissions
          chmod 600 .env
          chmod 600 firebase-service-account.json

          # Build and run the container
          docker-compose down
          docker-compose --env-file .env build
          docker-compose --env-file .env up -d